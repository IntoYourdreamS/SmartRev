    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package popup;

import Config.koneksi;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import smart.karyawan;
import smart.restok;
import java.sql.PreparedStatement;
import java.util.Date;

/**
 *
 * @author ASUS
 */
public class tambahstok extends javax.swing.JFrame {

    private Connection conn;

    public tambahstok() {
        initComponents();
        

        conn = koneksi.getConnection();
        makeButtonTransparent(kembali);
         makeButtonTransparent(tambah);
         makeButtonTransparent(ubah);
        //isiFieldProdukBerdasarkanNama();
       this.setBackground(new Color(0, 0, 0, 0));
        nama_barang.setOpaque(false);
        nama_barang.setBackground(new Color(0, 0, 0, 0));
        harga_jual.setOpaque(false);
        harga_jual.setBackground(new Color(0, 0, 0, 0));
        harga_beli.setOpaque(false);
        harga_beli.setBackground(new Color(0, 0, 0, 0));
       
       
        barcode.setOpaque(false);
        barcode.setBackground(new Color(0, 0, 0, 0));
     
    }


    

    
    
     private void makeButtonTransparent(JButton button) {
        button.setOpaque(false);
        button.setContentAreaFilled(false);
        button.setBorderPainted(false);
    }

    private void resetForm() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    
    
    class Coba extends JFrame {
    public Coba() {
        setTitle("Popup Frame - Coba");
        setSize(200, 150);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
    }
}
    
    private String generateCode() {
        String prefix = "PR";
        String query = "SELECT id_produk FROM produk ORDER BY id_produk DESC LIMIT 1";
        String newCode = "";

        try (Connection conn = koneksi.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            if (rs.next()) {
                String lastId = rs.getString("id_produk");
                int number = Integer.parseInt(lastId.substring(2));
                number++;
                newCode = prefix + String.format("%03d", number);
            } else {
                newCode = prefix + "001";
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal membuat ID produk baru: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

        return newCode;
    }
    
        private String generateCode1() {
        String prefix = "PB";
      String query = "SELECT id_pembelian FROM pembelian ORDER BY id_pembelian DESC LIMIT 1";

        String newCode = "";

        try (Connection conn = koneksi.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            if (rs.next()) {
                String lastId = rs.getString("id_pembelian");
                int number = Integer.parseInt(lastId.substring(2));
                number++;
                newCode = prefix + String.format("%03d", number);
            } else {
                newCode = prefix + "001";
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal membuat ID produk baru: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

        return newCode;
    }
    
   



    private void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "Peringatan", JOptionPane.WARNING_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ubah = new javax.swing.JButton();
        id_barang = new javax.swing.JTextField();
        nama_barang = new javax.swing.JTextField();
        harga_jual = new javax.swing.JTextField();
        harga_beli = new javax.swing.JTextField();
        tgl_exp = new com.toedter.calendar.JDateChooser();
        barcode = new javax.swing.JTextField();
        tambah = new javax.swing.JButton();
        kembali = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        ubah.setBorder(null);
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        id_barang.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        id_barang.setBorder(null);
        getContentPane().add(id_barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 170, 30));

        nama_barang.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        nama_barang.setBorder(null);
        nama_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nama_barangActionPerformed(evt);
            }
        });
        getContentPane().add(nama_barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 170, 40));

        harga_jual.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        harga_jual.setBorder(null);
        harga_jual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                harga_jualActionPerformed(evt);
            }
        });
        getContentPane().add(harga_jual, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, 260, 30));

        harga_beli.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        harga_beli.setBorder(null);
        getContentPane().add(harga_beli, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, 180, 30));

        tgl_exp.setBackground(new java.awt.Color(164, 107, 9));
        tgl_exp.setForeground(new java.awt.Color(116, 77, 6));
        tgl_exp.setFont(new java.awt.Font("Futura Md BT", 0, 16)); // NOI18N
        getContentPane().add(tgl_exp, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, 190, 40));

        barcode.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        barcode.setBorder(null);
        getContentPane().add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 170, 40));

        tambah.setBorder(null);
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 390, 160, 40));

        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });
        getContentPane().add(kembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 50, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tambah stok.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void harga_jualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_harga_jualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_harga_jualActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
// TODO add your handling code here:
String idBarang = id_barang.getText().trim();
String namaBarang = nama_barang.getText().trim();
String kodeBarcode = barcode.getText().trim();
Date tanggalExp = tgl_exp.getDate(); // Ambil tanggal dari JDateChooser

// Validasi input
if (idBarang.isEmpty() || namaBarang.isEmpty() || kodeBarcode.isEmpty() || tanggalExp == null) {
    JOptionPane.showMessageDialog(this, "Semua field harus diisi termasuk tanggal expired!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

try {
    java.sql.Date tglExpired = new java.sql.Date(tanggalExp.getTime());

    Connection conn = koneksi.getConnection();
    conn.setAutoCommit(false); // Mulai transaksi

    // 1. Cek apakah produk ada
    PreparedStatement pstCekProduk = conn.prepareStatement("SELECT * FROM produk WHERE id_produk = ?");
    pstCekProduk.setString(1, idBarang);
    ResultSet rsProduk = pstCekProduk.executeQuery();

    if (!rsProduk.next()) {
        JOptionPane.showMessageDialog(this, "ID Barang tidak ditemukan!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // 2. Cek apakah barcode sudah ada
    PreparedStatement pstCekBarcode = conn.prepareStatement("SELECT * FROM barcode WHERE kode_barcode = ?");
    pstCekBarcode.setString(1, kodeBarcode);
    ResultSet rsBarcode = pstCekBarcode.executeQuery();

    if (rsBarcode.next()) {
        JOptionPane.showMessageDialog(this, "Kode barcode sudah ada!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // 3. Tambah barcode baru ke tabel barcode
    PreparedStatement pstTambahBarcode = conn.prepareStatement(
        "INSERT INTO barcode (id_produk, kode_barcode, tgl_expired) VALUES (?, ?, ?)");
    pstTambahBarcode.setString(1, idBarang);
    pstTambahBarcode.setString(2, kodeBarcode);
    pstTambahBarcode.setDate(3, tglExpired);
    pstTambahBarcode.executeUpdate();

    // 4. Tambah stok +1 di tabel produk
    PreparedStatement pstUpdateStok = conn.prepareStatement(
        "UPDATE produk SET stok = stok + 1 WHERE id_produk = ?");
    pstUpdateStok.setString(1, idBarang);
    int updated = pstUpdateStok.executeUpdate();

    if (updated > 0) {
        conn.commit(); // Commit transaksi
        JOptionPane.showMessageDialog(this, "Barcode berhasil ditambahkan dan stok bertambah 1!", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        // Kosongkan field input
        id_barang.setText("");
        nama_barang.setText("");
        barcode.setText("");
        harga_jual.setText("");
        harga_beli.setText("");
        tgl_exp.setDate(null);
    } else {
        conn.rollback();
        JOptionPane.showMessageDialog(this, "Gagal mengupdate stok!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }

} catch (SQLException e) {
    try {
        Connection conn = koneksi.getConnection();
        conn.rollback(); // Rollback jika error
    } catch (SQLException ex) {
        ex.printStackTrace();
    }

    JOptionPane.showMessageDialog(null,
            "Kesalahan: " + e.getMessage(),
            "Kesalahan Database",
            JOptionPane.ERROR_MESSAGE
    );
    e.printStackTrace();
}
 

    }//GEN-LAST:event_tambahActionPerformed

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
   
    }//GEN-LAST:event_ubahActionPerformed

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new restok().setVisible(true);
    }//GEN-LAST:event_kembaliActionPerformed

    private void nama_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nama_barangActionPerformed
// TODO add your handling code here:
String namaBarang = nama_barang.getText().trim();
try {
    Connection conn = koneksi.getConnection();
    PreparedStatement pst = conn.prepareStatement("SELECT * FROM produk WHERE nama_produk LIKE ?");
    pst.setString(1, "%" + namaBarang + "%");
    ResultSet rs = pst.executeQuery();
    if (rs.next()) {
        String idProduk = rs.getString("id_produk");
        String namaProduk = rs.getString("nama_produk");
        String hargaJual = rs.getString("harga");
        
        id_barang.setText(idProduk);
        nama_barang.setText(namaProduk);
        harga_jual.setText(hargaJual);
        
        // Ambil harga beli dari detail_pembelian
        PreparedStatement pstBeli = conn.prepareStatement("SELECT harga_beli FROM detail_pembelian WHERE id_produk = ? ORDER BY id_pembelian DESC LIMIT 1");
        pstBeli.setString(1, idProduk);
        ResultSet rsBeli = pstBeli.executeQuery();
        if (rsBeli.next()) {
            harga_beli.setText(rsBeli.getString("harga_beli"));
        } else {
            harga_beli.setText("0");
        }
    } else {
        id_barang.setText("");
        harga_jual.setText("");
        harga_beli.setText("");
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null,
            "Kesalahan: " + e.getMessage(),
            "Kesalahan Database",
            JOptionPane.ERROR_MESSAGE
    );
    e.printStackTrace();
}     

    }//GEN-LAST:event_nama_barangActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tambahstok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tambahstok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tambahstok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tambahstok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tambahstok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcode;
    private javax.swing.JTextField harga_beli;
    private javax.swing.JTextField harga_jual;
    private javax.swing.JTextField id_barang;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton kembali;
    private javax.swing.JTextField nama_barang;
    private javax.swing.JButton tambah;
    private com.toedter.calendar.JDateChooser tgl_exp;
    private javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
}
