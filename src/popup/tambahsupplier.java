/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package popup;

import Config.koneksi;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import smart.karyawan;
import smart.restok;
import java.sql.PreparedStatement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author ASUS
 */
public class tambahsupplier extends javax.swing.JFrame {

    /**
     * Creates new form coba
     */
    public tambahsupplier() {
        initComponents();
         id_supplier.setOpaque(false);
        id_supplier.setBackground(new Color(0, 0, 0, 0));
        nama_supplier.setOpaque(false);
        nama_supplier.setBackground(new Color(0, 0, 0, 0));
         no_telp.setOpaque(false);
        no_telp.setBackground(new Color(0, 0, 0, 0));
        alamat.setOpaque(false);
        alamat.setBackground(new Color(0, 0, 0, 0));
          makeButtonTransparent(ubah);
          makeButtonTransparent(tambah);
           makeButtonTransparent(hapus);
             this.setBackground(new Color(0, 0, 0, 0));
            

    }
    
     private void makeButtonTransparent(JButton button) {
        button.setOpaque(false);
        button.setContentAreaFilled(false);
        button.setBorderPainted(false);
    }
    
    
    
    class Coba extends JFrame {
    public Coba() {
        setTitle("Popup Frame - Coba");
        setSize(200, 150);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kembali = new javax.swing.JButton();
        nama_supplier = new javax.swing.JTextField();
        no_telp = new javax.swing.JTextField();
        alamat = new javax.swing.JTextField();
        tambah = new javax.swing.JButton();
        ubah = new javax.swing.JButton();
        id_supplier = new javax.swing.JTextField();
        hapus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(820, 470));
        setMinimumSize(new java.awt.Dimension(820, 470));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(820, 470));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });
        getContentPane().add(kembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 570, 200, 30));

        nama_supplier.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        nama_supplier.setBorder(null);
        getContentPane().add(nama_supplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 260, 40));

        no_telp.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        no_telp.setBorder(null);
        no_telp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no_telpActionPerformed(evt);
            }
        });
        getContentPane().add(no_telp, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 195, 250, 40));

        alamat.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        alamat.setBorder(null);
        alamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alamatActionPerformed(evt);
            }
        });
        getContentPane().add(alamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 310, 30));

        tambah.setBorder(null);
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 160, 40));

        ubah.setBorder(null);
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });
        getContentPane().add(ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, 160, 40));

        id_supplier.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        id_supplier.setBorder(null);
        id_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_supplierActionPerformed(evt);
            }
        });
        getContentPane().add(id_supplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 260, 40));

        hapus.setBorder(null);
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 370, 160, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Tambah Supplier.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private String generateCode() {
    String prefix = "SP";
    String query = "SELECT id_supplier FROM supplier ORDER BY id_supplier DESC LIMIT 1";
    String newCode = "";

    try (Connection conn = koneksi.getConnection();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(query)) {

        if (rs.next()) {
            String lastId = rs.getString("id_supplier"); // Contoh: "SP005"
            int number = Integer.parseInt(lastId.substring(2)); // Ambil "005" lalu ubah ke int
            number++; // Tambah 1
            newCode = prefix + String.format("%03d", number); // Format jadi "SP006"
        } else {
            newCode = prefix + "001"; // Jika belum ada data, mulai dari SP001
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal membuat ID supplier baru: " + e.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }

    return newCode;
}

    private void kembaliActionPerformed(ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        // TODO add your handling code here:
          new restok().setVisible(true);
        this.setVisible(false); 
    }//GEN-LAST:event_kembaliActionPerformed

    private void no_telpActionPerformed(ActionEvent evt) {//GEN-FIRST:event_no_telpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no_telpActionPerformed

    private void alamatActionPerformed(ActionEvent evt) {//GEN-FIRST:event_alamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alamatActionPerformed

    private void tambahActionPerformed(ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
        // Ambil input dari field
String namaSupplier = nama_supplier.getText();
String noTelp = no_telp.getText();
String alamatSupplier = alamat.getText();
String kode = generateCode();

// Periksa apakah semua field sudah diisi
if (namaSupplier.isEmpty() || noTelp.isEmpty() || alamatSupplier.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    return;
}

// Konfirmasi penambahan
int confirm = JOptionPane.showConfirmDialog(this,
        "Apakah Anda yakin ingin menambah data?",
        "Konfirmasi",
        JOptionPane.YES_NO_OPTION);

if (confirm == JOptionPane.YES_OPTION) {
    String query = "INSERT INTO supplier (id_supplier, nama_supplier, telepon, alamat, create_at) VALUES (?, ?, ?, ?, NOW())";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement stat = conn.prepareStatement(query)) {

        // Isi parameter pada prepared statement
        stat.setString(1, kode);
        stat.setString(2, namaSupplier);
        stat.setString(3, noTelp);
        stat.setString(4, alamatSupplier);

        // Eksekusi perintah SQL
        int rowsAffected = stat.executeUpdate();

        if (rowsAffected > 0) {
            notifberhasilkrw popup = new notifberhasilkrw();
            popup.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // Untuk debugging
    }
}

    }//GEN-LAST:event_tambahActionPerformed

    private void ubahActionPerformed(ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        // TODO add your handling code here:
        String idSupplier = id_supplier.getText();
String namaSupplier = nama_supplier.getText();
String noTelp = no_telp.getText();
String Alamat = alamat.getText();

try {
    Connection conn = koneksi.getConnection();
    String sql = "UPDATE supplier SET nama_supplier = ?, telepon = ?, alamat = ? WHERE id_supplier = ?";
    PreparedStatement pst = conn.prepareStatement(sql);

    pst.setString(1, namaSupplier);
    pst.setString(2, noTelp);
    pst.setString(3, Alamat);
   
    pst.setString(4, idSupplier); // WHERE id_karyawan = ?

    int updatedRows = pst.executeUpdate();

    if (updatedRows > 0) {
         notifberhasilubhkrw popup = new notifberhasilubhkrw();
              popup.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Gagal mengubah data. ID Karyawan tidak ditemukan.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null,
            "Kesalahan: " + e.getMessage(),
            "Kesalahan Database",
            JOptionPane.ERROR_MESSAGE
    );
    e.printStackTrace();
}
    }//GEN-LAST:event_ubahActionPerformed

    private void id_supplierActionPerformed(ActionEvent evt) {//GEN-FIRST:event_id_supplierActionPerformed
        // TODO add your handling code here:
         String idSupplier = id_supplier.getText();

try {
    Connection conn = koneksi.getConnection();
    PreparedStatement pst = conn.prepareStatement("SELECT * FROM supplier WHERE id_supplier = ?");
    pst.setString(1, idSupplier);
    ResultSet rs = pst.executeQuery();

    if (rs.next()) {
        String namaKaryawan = rs.getString("nama_supplier");
        String noTelp = rs.getString("no_telp");
        String Alamat = rs.getString("alamat");
        

        nama_supplier.setText(namaKaryawan);
        no_telp.setText(noTelp);
        alamat.setText(Alamat);
        
    } else {
        JOptionPane.showMessageDialog(this, "No Karyawan tidak ditemukan", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        nama_supplier.setText("");
        no_telp.setText("");
        alamat.setText("");
        
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null,
            "Kesalahan: " + e.getMessage(),
            "Kesalahan Database",
            JOptionPane.ERROR_MESSAGE
    );
    e.printStackTrace();
}
    }//GEN-LAST:event_id_supplierActionPerformed

    private void hapusActionPerformed(ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
            String idSupplier = id_supplier.getText();

    // Validasi input
    if (idSupplier.isEmpty()) {
        JOptionPane.showMessageDialog(this, "ID Supplier harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Konfirmasi penghapusan
    int confirm = JOptionPane.showConfirmDialog(this,
            "Apakah Anda yakin ingin menghapus data supplier ini?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        String query = "DELETE FROM supplier WHERE id_supplier = ?";

        try (Connection conn = koneksi.getConnection();
             PreparedStatement stat = conn.prepareStatement(query)) {

            stat.setString(1, idSupplier);

            int deletedRows = stat.executeUpdate();

            if (deletedRows > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Data supplier tidak ditemukan atau gagal dihapus.", "Gagal", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Kesalahan saat menghapus data: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_hapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tambahsupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tambahsupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tambahsupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tambahsupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tambahsupplier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JTextField alamat;
    javax.swing.JButton hapus;
    javax.swing.JTextField id_supplier;
    javax.swing.JLabel jLabel1;
    javax.swing.JButton kembali;
    javax.swing.JTextField nama_supplier;
    javax.swing.JTextField no_telp;
    javax.swing.JButton tambah;
    javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
}
