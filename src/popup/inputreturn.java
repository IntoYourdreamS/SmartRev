/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package popup;

import Config.koneksi;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.sql.DriverManager;

/**
 *
 * @author LENOVO
 */
public class inputreturn extends javax.swing.JFrame {

    /**
     * Creates new form inputreturn
     */
    public inputreturn() {
        initComponents();
        id_supplier.setOpaque(false);
        id_supplier.setBackground(new Color(0, 0, 0, 0));
        id_pembelian.setOpaque(false);
        id_pembelian.setBackground(new Color(0, 0, 0, 0));
        id_produk.setOpaque(false);
        id_produk.setBackground(new Color(0, 0, 0, 0));
        barcode.setOpaque(false);
        barcode.setBackground(new Color(0, 0, 0, 0));
        barcode.setOpaque(false);
        barcode.setBackground(new Color(0, 0, 0, 0));
        alasantext.setOpaque(false);
        alasantext.setBackground(new Color(0, 0, 0, 0));
        namaproduk.setOpaque(false);
        namaproduk.setBackground(new Color(0, 0, 0, 0));

        // Make buttons transparent
        makeButtonTransparent(tambah);
        makeButtonTransparent(ubah);
        makeButtonTransparent(btnkembali);
        
        tanggal_return.setDate(new java.util.Date());
        id_pembelian.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            fillFieldsFromPembelian();
        }
    });
    }
    
    private void fillFieldsFromPembelian() {
    String idPembelian = id_pembelian.getText().trim();
    if (idPembelian.isEmpty()) {
        return;
    }

    try {
        Connection conn = koneksi.getConnection();
        String query = "SELECT p.id_supplier, dp.id_produk FROM pembelian p " +
                       "JOIN detail_pembelian dp ON p.id_pembelian = dp.id_pembelian " +
                       "WHERE p.id_pembelian = ? LIMIT 1";
        
        PreparedStatement ps = conn.prepareStatement(query);
        ps.setString(1, idPembelian);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            id_supplier.setText(rs.getString("id_supplier"));
            id_produk.setText(rs.getString("id_produk"));
        } else {
            JOptionPane.showMessageDialog(this, "Data pembelian tidak ditemukan", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void clearFields() {
        id_pembelian.setText("");
        tanggal_return.setDate(null);
        alasantext.setText("");
    }

    private void makeButtonTransparent(JButton button) {
        button.setOpaque(false);
        button.setContentAreaFilled(false);
        button.setBorderPainted(false);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barcode = new javax.swing.JTextField();
        id_pembelian = new javax.swing.JTextField();
        id_produk = new javax.swing.JTextField();
        id_supplier = new javax.swing.JTextField();
        alasantext = new javax.swing.JTextField();
        btnkembali = new javax.swing.JButton();
        ubah = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        tanggal_return = new com.toedter.calendar.JDateChooser();
        namaproduk = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        barcode.setBorder(null);
        barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeActionPerformed(evt);
            }
        });
        getContentPane().add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 180, 30));

        id_pembelian.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        id_pembelian.setBorder(null);
        id_pembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_pembelianActionPerformed(evt);
            }
        });
        getContentPane().add(id_pembelian, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 180, 40));

        id_produk.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        id_produk.setBorder(null);
        id_produk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_produkActionPerformed(evt);
            }
        });
        getContentPane().add(id_produk, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 180, 40));

        id_supplier.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        id_supplier.setBorder(null);
        id_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_supplierActionPerformed(evt);
            }
        });
        getContentPane().add(id_supplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 310, 40));

        alasantext.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        alasantext.setBorder(null);
        alasantext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alasantextActionPerformed(evt);
            }
        });
        getContentPane().add(alasantext, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 310, 30));

        btnkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkembaliActionPerformed(evt);
            }
        });
        getContentPane().add(btnkembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(755, 23, 40, 40));

        ubah.setContentAreaFilled(false);
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });
        getContentPane().add(ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, 190, 40));

        tambah.setContentAreaFilled(false);
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, 180, 40));
        getContentPane().add(tanggal_return, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 170, 40));

        namaproduk.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        namaproduk.setBorder(null);
        namaproduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaprodukActionPerformed(evt);
            }
        });
        getContentPane().add(namaproduk, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 190, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/return barang final.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void id_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_supplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_supplierActionPerformed

    private void alasantextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alasantextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alasantextActionPerformed

    private void id_pembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_pembelianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_pembelianActionPerformed

    private void id_produkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_produkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_produkActionPerformed

    private void barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeActionPerformed
String barcodeValue = barcode.getText().trim();
        
        if (barcodeValue.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Barcode tidak boleh kosong");
            return;
        }

        try (Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/smart", "root", "")) {
            
            // 1. Cari produk berdasarkan barcode (ditambah nama_produk)
            String produkQuery = "SELECT id_produk, nama_produk, id_supplier FROM produk WHERE barcode = ?";
            try (PreparedStatement pstProduk = conn.prepareStatement(produkQuery)) {
                pstProduk.setString(1, barcodeValue);
                ResultSet rsProduk = pstProduk.executeQuery();

                if (rsProduk.next()) {
                    String idProduk = rsProduk.getString("id_produk");
                    String namaProduk = rsProduk.getString("nama_produk");
                    String idSupplier = rsProduk.getString("id_supplier");

                    // Isi semua field termasuk nama produk
                    id_produk.setText(idProduk);
                    namaproduk.setText(namaProduk); // Mengisi field nama produk
                    id_supplier.setText(idSupplier != null ? idSupplier : "");

                    // 2. Cari pembelian terakhir untuk produk ini
                    String pembelianQuery = "SELECT p.id_pembelian " +
                                         "FROM pembelian p " +
                                         "JOIN detail_pembelian dp ON p.id_pembelian = dp.id_pembelian " +
                                         "WHERE dp.id_produk = ? " +
                                         "ORDER BY p.tanggal DESC LIMIT 1";
                    
                    try (PreparedStatement pstPembelian = conn.prepareStatement(pembelianQuery)) {
                        pstPembelian.setString(1, idProduk);
                        ResultSet rsPembelian = pstPembelian.executeQuery();

                        if (rsPembelian.next()) {
                            id_pembelian.setText(rsPembelian.getString("id_pembelian"));
                        } else {
                            id_pembelian.setText("");
                            System.out.println("Debug: Tidak ditemukan pembelian untuk produk " + idProduk);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Barcode tidak ditemukan");
                    clearFields();
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error database: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_barcodeActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
        String barcodeValue = barcode.getText().trim();
        
        if (barcodeValue.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Barcode tidak boleh kosong");
            return;
        }

        try (Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/smart", "root", "")) {
            
            // 1. Cari produk berdasarkan barcode
            String produkQuery = "SELECT id_produk, id_supplier FROM produk WHERE barcode = ?";
            try (PreparedStatement pstProduk = conn.prepareStatement(produkQuery)) {
                pstProduk.setString(1, barcodeValue);
                ResultSet rsProduk = pstProduk.executeQuery();

                if (rsProduk.next()) {
                    String idProduk = rsProduk.getString("id_produk");
                    String idSupplier = rsProduk.getString("id_supplier");

                    id_produk.setText(idProduk);
                    id_supplier.setText(idSupplier != null ? idSupplier : "");

                    // 2. Cari pembelian terakhir untuk produk ini (QUERY YANG DIPERBAIKI)
                    String pembelianQuery = "SELECT p.id_pembelian " +
                                         "FROM pembelian p " +
                                         "JOIN detail_pembelian dp ON p.id_pembelian = dp.id_pembelian " +
                                         "WHERE dp.id_produk = ? " +
                                         "ORDER BY p.tanggal DESC LIMIT 1";
                    
                    try (PreparedStatement pstPembelian = conn.prepareStatement(pembelianQuery)) {
                        pstPembelian.setString(1, idProduk);
                        ResultSet rsPembelian = pstPembelian.executeQuery();

                        if (rsPembelian.next()) {
                            id_pembelian.setText(rsPembelian.getString("id_pembelian"));
                        } else {
                            id_pembelian.setText("");
                            System.out.println("Debug: Tidak ditemukan pembelian untuk produk " + idProduk);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Barcode tidak ditemukan");
                    clearFields();
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error database: " + ex.getMessage());
            ex.printStackTrace();
        }
    
    }//GEN-LAST:event_tambahActionPerformed

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        // TODO add your handling code here:
      try {
    // 1. Ambil nilai dari form
    String barcodeValue = barcode.getText().trim();
    String alasanText = alasantext.getText().trim();
    String tanggal_retur = ((JTextField) tanggal_return.getDateEditor().getUiComponent()).getText().trim();
    
    // 2. Validasi input
    if (barcodeValue.isEmpty() || alasanText.isEmpty() || tanggal_retur.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Semua field harus diisi!");
        return;
    }

    // 3. Dapatkan data produk dari barcode
    String idProduk = "";
    String namaProduk = "";
    String idSupplier = "";
    
    try (Connection conn1 = koneksi.getConnection();
         PreparedStatement ps1 = conn1.prepareStatement(
             "SELECT id_produk, nama_produk, id_supplier FROM produk WHERE barcode = ?")) {
        
        ps1.setString(1, barcodeValue);
        ResultSet rs = ps1.executeQuery();
        
        if (rs.next()) {
            idProduk = rs.getString("id_produk");
            namaProduk = rs.getString("nama_produk");
            idSupplier = rs.getString("id_supplier");
        } else {
            JOptionPane.showMessageDialog(null, "Produk dengan barcode tersebut tidak ditemukan!");
            return;
        }
    }

    // 4. Generate ID retur baru (format: RT-tahunbulantang-xxx)
    String idRetur = "RT-" + new SimpleDateFormat("yyyyMMdd").format(new Date()) + "-001";
    
    // 5. Cari ID pembelian terakhir untuk produk ini
    String idPembelian = "";
    try (Connection conn2 = koneksi.getConnection();
         PreparedStatement ps2 = conn2.prepareStatement(
             "SELECT p.id_pembelian FROM pembelian p " +
             "JOIN detail_pembelian dp ON p.id_pembelian = dp.id_pembelian " +
             "WHERE dp.id_produk = ? ORDER BY p.tanggal DESC LIMIT 1")) {
        
        ps2.setString(1, idProduk);
        ResultSet rs = ps2.executeQuery();
        if (rs.next()) {
            idPembelian = rs.getString("id_pembelian");
        }
    }

    // 6. Simpan data retur penjualan
    String query = "INSERT INTO retur_penjualan " +
                 "(id_retur_penjualan, id_penjualan, tanggal_retur, alasan, " +
                 "id_produk, barcode, nama_produk, id_pembelian, id_supplier) " +
                 "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
    
    try (Connection conn3 = koneksi.getConnection();
         PreparedStatement ps3 = conn3.prepareStatement(query)) {
        
        // Set parameter untuk query INSERT
        ps3.setString(1, idRetur);
        ps3.setString(2, ""); // id_penjualan kosong jika tidak ada
        ps3.setString(3, tanggal_retur);
        ps3.setString(4, alasanText);
        ps3.setString(5, idProduk);
        ps3.setString(6, barcodeValue);
        ps3.setString(7, namaProduk);
        ps3.setString(8, idPembelian);
        ps3.setString(9, idSupplier);
        
        int rowsAffected = ps3.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Data retur berhasil ditambahkan dengan ID: " + idRetur);
            clearFields();
        } else {
            JOptionPane.showMessageDialog(null, "Gagal menambahkan data retur");
        }
    }
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    ex.printStackTrace();
}
    }//GEN-LAST:event_ubahActionPerformed

    private void btnkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkembaliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnkembaliActionPerformed

    private void namaprodukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaprodukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaprodukActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputreturn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alasantext;
    private javax.swing.JTextField barcode;
    private javax.swing.JButton btnkembali;
    private javax.swing.JTextField id_pembelian;
    private javax.swing.JTextField id_produk;
    private javax.swing.JTextField id_supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField namaproduk;
    private javax.swing.JButton tambah;
    private com.toedter.calendar.JDateChooser tanggal_return;
    private javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
}
