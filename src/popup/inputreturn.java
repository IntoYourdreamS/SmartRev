/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package popup;

import Config.koneksi;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.sql.DriverManager;
import java.sql.Statement;

/**
 *
 * @author LENOVO
 */
public class inputreturn extends javax.swing.JFrame {

    /**
     * Creates new form inputreturn
     */
    public inputreturn() {
        initComponents();
        id_supplier.setOpaque(false);
        id_supplier.setBackground(new Color(0, 0, 0, 0));
        id_pembelian.setOpaque(false);
        id_pembelian.setBackground(new Color(0, 0, 0, 0));
        id_produk.setOpaque(false);
        id_produk.setBackground(new Color(0, 0, 0, 0));
        barcode.setOpaque(false);
        barcode.setBackground(new Color(0, 0, 0, 0));
        barcode.setOpaque(false);
        barcode.setBackground(new Color(0, 0, 0, 0));
        alasantext.setOpaque(false);
        alasantext.setBackground(new Color(0, 0, 0, 0));
        namaproduk.setOpaque(false);
        namaproduk.setBackground(new Color(0, 0, 0, 0));
         jumlah.setOpaque(false);
        jumlah.setBackground(new Color(0, 0, 0, 0));

         this.setBackground(new Color(0, 0, 0, 0));

        // Make buttons transparent
        makeButtonTransparent(tambah);
        makeButtonTransparent(ubah);
        makeButtonTransparent(btnkembali);
        
       
        id_pembelian.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
           
        }
    });
    }
    
  
    
    private void clearFields() {
        id_pembelian.setText("");
        
        alasantext.setText("");
    }

    private void makeButtonTransparent(JButton button) {
        button.setOpaque(false);
        button.setContentAreaFilled(false);
        button.setBorderPainted(false);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barcode = new javax.swing.JTextField();
        id_pembelian = new javax.swing.JTextField();
        id_produk = new javax.swing.JTextField();
        namaproduk = new javax.swing.JTextField();
        jumlah = new javax.swing.JTextField();
        id_supplier = new javax.swing.JTextField();
        alasantext = new javax.swing.JTextField();
        btnkembali = new javax.swing.JButton();
        ubah = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        barcode.setBorder(null);
        barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeActionPerformed(evt);
            }
        });
        getContentPane().add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 180, 30));

        id_pembelian.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        id_pembelian.setBorder(null);
        id_pembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_pembelianActionPerformed(evt);
            }
        });
        getContentPane().add(id_pembelian, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 180, 40));

        id_produk.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        id_produk.setBorder(null);
        id_produk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_produkActionPerformed(evt);
            }
        });
        getContentPane().add(id_produk, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 180, 40));

        namaproduk.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        namaproduk.setBorder(null);
        namaproduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaprodukActionPerformed(evt);
            }
        });
        getContentPane().add(namaproduk, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 190, 30));

        jumlah.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jumlah.setBorder(null);
        jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahActionPerformed(evt);
            }
        });
        getContentPane().add(jumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 180, 40));

        id_supplier.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        id_supplier.setBorder(null);
        id_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_supplierActionPerformed(evt);
            }
        });
        getContentPane().add(id_supplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 310, 40));

        alasantext.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        alasantext.setBorder(null);
        alasantext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alasantextActionPerformed(evt);
            }
        });
        getContentPane().add(alasantext, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 310, 30));

        btnkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkembaliActionPerformed(evt);
            }
        });
        getContentPane().add(btnkembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(755, 23, 40, 40));

        ubah.setContentAreaFilled(false);
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });
        getContentPane().add(ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, 190, 40));

        tambah.setContentAreaFilled(false);
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 180, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/return barang final (1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private String generateCode() {
        String kodeMenu = "RT001";
        try (Connection conn = koneksi.getConnection()) {
            if (conn != null) {
                try {
//                Statement st = conn.createStatement();
                    Statement statem = conn.createStatement();
                    String query = "SELECT id_retur_penjualan FROM retur_penjualan ORDER BY id_retur_penjualan DESC LIMIT 1";
                    ResultSet resultSet = statem.executeQuery(query);

                    if (resultSet.next()) {
                        String lastKode = resultSet.getString("id_retur_penjualan");
                        int kodeNum = Integer.parseInt(lastKode.substring(2)) + 1;
                        kodeMenu = String.format("RT%03d", kodeNum);
                    }

                    resultSet.close();
                    statem.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }catch(SQLException e){
            e.printStackTrace();
        }catch(Exception e){
            e.printStackTrace();
        }

        return kodeMenu;
    }
    private void id_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_supplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_supplierActionPerformed

    private void alasantextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alasantextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alasantextActionPerformed

    private void id_pembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_pembelianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_pembelianActionPerformed

    private void id_produkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_produkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_produkActionPerformed

    private void barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeActionPerformed
String barcodeValue = barcode.getText().trim();
if (barcodeValue.isEmpty()) {
    JOptionPane.showMessageDialog(null, "Barcode tidak boleh kosong");
    return;
}

try (Connection conn = DriverManager.getConnection(
        "jdbc:mysql://localhost:3306/smart", "root", "")) {
    
    // 1. Find product by barcode using JOIN between barcode and produk tables
    String produkQuery = "SELECT p.id_produk, p.nama_produk, p.id_supplier " +
                        "FROM barcode b " +
                        "JOIN produk p ON b.id_produk = p.id_produk " +
                        "WHERE b.kode_barcode = ?";
    
    try (PreparedStatement pstProduk = conn.prepareStatement(produkQuery)) {
        pstProduk.setString(1, barcodeValue);
        ResultSet rsProduk = pstProduk.executeQuery();
        
        if (rsProduk.next()) {
            String idProduk = rsProduk.getString("id_produk");
            String namaProduk = rsProduk.getString("nama_produk");
            String idSupplier = rsProduk.getString("id_supplier");
            
            // Fill all fields
            id_produk.setText(idProduk);
            namaproduk.setText(namaProduk);
            id_supplier.setText(idSupplier != null ? idSupplier : "");
            
            // 2. Find the most recent purchase for this product
            String pembelianQuery = "SELECT dp.id_pembelian " +
                                  "FROM detail_pembelian dp " +
                                  "JOIN pembelian p ON dp.id_pembelian = p.id_pembelian " +
                                  "WHERE dp.id_produk = ? " +
                                  "AND dp.id_pembelian IS NOT NULL " +
                                  "ORDER BY p.tanggal DESC LIMIT 1";
            
            try (PreparedStatement pstPembelian = conn.prepareStatement(pembelianQuery)) {
                pstPembelian.setString(1, idProduk);
                ResultSet rsPembelian = pstPembelian.executeQuery();
                
                if (rsPembelian.next()) {
                    id_pembelian.setText(rsPembelian.getString("id_pembelian"));
                } else {
                    // Debug information
                    System.out.println("Debug: Product ID: " + idProduk);
                    id_pembelian.setText("");
                    JOptionPane.showMessageDialog(null, "Tidak ditemukan pembelian valid untuk produk ini");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Barcode tidak ditemukan");
            clearFields();
        }
    }
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(null, "Error database: " + ex.getMessage());
    ex.printStackTrace();
}

       }//GEN-LAST:event_barcodeActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
  try {
    // 1. Ambil nilai dari form
    String barcodeValue = barcode.getText().trim();
    String alasanText = alasantext.getText().trim();
    int jumlahRetur = Integer.parseInt(jumlah.getText().trim());

    // 2. Validasi input
    if (barcodeValue.isEmpty() || alasanText.isEmpty() || jumlahRetur <= 0) {
        JOptionPane.showMessageDialog(null, "Barcode, alasan, dan jumlah harus diisi!\nJumlah harus lebih dari 0!");
        return;
    }

    // 3. Dapatkan data produk dari barcode menggunakan JOIN dengan tabel barcode
    String idProduk = "", namaProduk = "", idSupplier = "", idPembelian = "";
    int stokSekarang = 0;

    try (Connection conn1 = koneksi.getConnection();
         PreparedStatement ps1 = conn1.prepareStatement(
             "SELECT p.id_produk, p.nama_produk, p.id_supplier, p.stok " +
             "FROM barcode b " +
             "JOIN produk p ON b.id_produk = p.id_produk " +
             "WHERE b.kode_barcode = ? FOR UPDATE")) {

        ps1.setString(1, barcodeValue);
        ResultSet rs = ps1.executeQuery();

        if (rs.next()) {
            idProduk = rs.getString("id_produk");
            namaProduk = rs.getString("nama_produk");
            idSupplier = rs.getString("id_supplier");
            stokSekarang = rs.getInt("stok");

            if (stokSekarang < jumlahRetur) {
                JOptionPane.showMessageDialog(null, "Stok tidak mencukupi! Stok tersedia: " + stokSekarang);
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Produk dengan barcode tersebut tidak ditemukan!");
            return;
        }

        // 4. Ambil id_pembelian dari detail_pembelian berdasarkan tanggal terbaru
        String pembelianQuery = "SELECT dp.id_pembelian " +
                               "FROM detail_pembelian dp " +
                               "JOIN pembelian p ON dp.id_pembelian = p.id_pembelian " +
                               "WHERE dp.id_produk = ? " +
                               "AND dp.id_pembelian IS NOT NULL " +
                               "ORDER BY p.tanggal DESC LIMIT 1";
        try (PreparedStatement ps2 = conn1.prepareStatement(pembelianQuery)) {
            ps2.setString(1, idProduk);
            ResultSet rs2 = ps2.executeQuery();
            if (rs2.next()) {
                idPembelian = rs2.getString("id_pembelian");
            } else {
                idPembelian = null;
            }
        }

    }

    // 5. Generate ID retur
    String idRetur = generateCode();

    // 6. Mulai transaksi database
    Connection conn = null;
    try {
        conn = koneksi.getConnection();
        conn.setAutoCommit(false); // Mulai transaksi

        // 7. Simpan ke tabel retur_penjualan termasuk id_pembelian
        String queryRetur = "INSERT INTO retur_penjualan " +
                "(id_retur_penjualan, id_pembelian, tanggal_retur, alasan, " +
                "id_produk, barcode, nama_produk, id_supplier) " +
                "VALUES (?, ?, CURRENT_TIMESTAMP, ?, ?, ?, ?, ?)";

        try (PreparedStatement psRetur = conn.prepareStatement(queryRetur)) {
            psRetur.setString(1, idRetur);
            psRetur.setString(2, idPembelian); // id_pembelian dari query sebelumnya
            psRetur.setString(3, alasanText);
            psRetur.setString(4, idProduk);
            psRetur.setString(5, barcodeValue);
            psRetur.setString(6, namaProduk);
            psRetur.setString(7, idSupplier);

            psRetur.executeUpdate();
        }

        // 8. Kurangi stok
        String queryUpdateStok = "UPDATE produk SET stok = stok - ? WHERE id_produk = ?";
        try (PreparedStatement psUpdate = conn.prepareStatement(queryUpdateStok)) {
            psUpdate.setInt(1, jumlahRetur);
            psUpdate.setString(2, idProduk);
            int updated = psUpdate.executeUpdate();

            if (updated == 0) {
                throw new SQLException("Gagal mengupdate stok produk");
            }
        }

        // 9. Commit transaksi
        conn.commit();
        JOptionPane.showMessageDialog(null, "Data retur berhasil ditambahkan dengan ID: " + idRetur
                + "\nStok produk berkurang sebanyak " + jumlahRetur);
        clearFields();

    } catch (SQLException ex) {
        if (conn != null) {
            try {
                conn.rollback();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error rollback: " + e.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        ex.printStackTrace();
    } finally {
        if (conn != null) {
            try {
                conn.setAutoCommit(true);
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
} catch (NumberFormatException ex) {
    JOptionPane.showMessageDialog(null, "Jumlah harus berupa angka!");
} catch (Exception ex) {
    JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    ex.printStackTrace();
}

    }//GEN-LAST:event_tambahActionPerformed

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        // TODO add your handling code here:
  
    }//GEN-LAST:event_ubahActionPerformed

    private void btnkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkembaliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnkembaliActionPerformed

    private void namaprodukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaprodukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaprodukActionPerformed

    private void jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputreturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputreturn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alasantext;
    private javax.swing.JTextField barcode;
    private javax.swing.JButton btnkembali;
    private javax.swing.JTextField id_pembelian;
    private javax.swing.JTextField id_produk;
    private javax.swing.JTextField id_supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jumlah;
    private javax.swing.JTextField namaproduk;
    private javax.swing.JButton tambah;
    private javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
}
